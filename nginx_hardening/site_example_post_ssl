server {

    listen 80;
    listen [::]:80;
    
    server_name my_site.com www.my_site.com; 
    return 301 https://my_site.com$request_uri;

}

server {
  
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;
  
  server_name www.my_site.com my_site.com;
  
  # Tell Nginx/Passenger where application lives
  root /var/www/my_site.com/public;
  
  # Enable Passenger
  passenger_enabled on;
  
  # Specify rails_env
  rails_env development;

  # SSL Configuration
  ssl_certificate /etc/letsencrypt/live/my_site.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/my_site.com/privkey.pem;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/ssl/certs/dhparam.pem;
  ssl_stapling on;
  ssl_stapling_verify on;
  
  # Security headers
  # add_header X-XSS-Protection "1; mode=block"; (this is not needed in nginx config if using header in web app)
  add_header Referrer-Policy "no-referrer";
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options "SAMEORIGIN";
  add_header Content-Security-Policy "default-src 'self';";
  
}
